import { Context } from '@temporalio/activity';
import { WorkflowClient } from '@temporalio/client';
import { ActivityInboundCallsInterceptor } from '@temporalio/worker';

/** An Activity Context with an attached logger */
export interface ContextWithClient extends Context {
  client: WorkflowClient;
}

/** Get the current Activity context with an attached logger */
export function getContext(): ContextWithClient {
  return Context.current() as ContextWithClient;
}

/** Logs Activity executions and their duration */
export class ActivityInboundInterceptor implements ActivityInboundCallsInterceptor {
  constructor(ctx: Context, client: WorkflowClient) {
    // Set a logger instance on the current Activity Context to provide
    // contextual logging information to each log entry generated by the Activity.
    (ctx as ContextWithClient).client = client;
  }
}
